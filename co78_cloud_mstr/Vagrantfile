# -*- mode: ruby -*-
# vi: set ft=ruby :
#
require 'yaml'
#
BOX_NAME="makker/CO78SwGUI"
BOX_VERSION = "1"
#BOX_URL="file://../boxes/CO78SwGUIv1.0.box"
#
# https://stackoverflow.com/questions/13065576/override-vagrant-configuration-settings-locally-per-dev
settings = YAML.load_file 'settings.yml'
provisioners = YAML.load_file 'provisioners.yml'
VMS_HOME = settings['environment']['vmsHome']
#
VM_MSTR_MACHINE=settings['master']['machine']
VM_NODE1_MACHINE=settings['node1']['machine']
VM_NODE2_MACHINE=settings['node2']['machine']
#
LOCAL_COMMON_SCRIPTS = "../Stage/commonScripts"
STAGE_COMMON_SCRIPTS = "/media/sf_Stage/commonScripts"
#
def shared_vm_config(vmconf, node)
  vmconf.vm.box = BOX_NAME
  vmconf.vm.box_version = BOX_VERSION
  # config.vm.box_url=BOX_URL
  vmconf.vm.hostname=node['hostname']
  vmconf.ssh.username=node['ssh']['username']
  vmconf.ssh.password=node['ssh']['password']
end
#
def add_shared_folder(vmconf, sharedfolder)   
    vmconf.vm.synced_folder sharedfolder['hostFolder'], sharedfolder['guestFolder']
end
#
def shared_vbx_config(vbx, nodeSettings)
  vbx.name=nodeSettings['name']
  vbx.memory=nodeSettings['vmMemory']
  vbx.cpus=nodeSettings['vmCpus']
  vbx.gui=nodeSettings['vmGui']
  # Set clipboard and drag&drop bidirectional
  vbx.customize ["modifyvm", :id, "--clipboard-mode", "bidirectional"]
  vbx.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
  # Set number of monitors.
  vbx.customize ["modifyvm", :id, "--monitorcount", nodeSettings['vmMonitorCount']]
end
#
def add_vbx_shared_disk(vbx, nodeSettings, disk)
  storage_controller = nodeSettings['disks']['controller']
  vm_disk=VMS_HOME+"/"+nodeSettings['name']+"/"+nodeSettings['name']+"-"+disk['name']+".vdi"
  # Create a disk  
  unless File.exist?(vm_disk)
    vbx.customize [ "createmedium", "disk", "--filename", vm_disk, "--format", "vdi", "--size", disk['size'] , "--variant", "Standard" ]
  end
  # Add it to the VM.
  vbx.customize [ "storageattach", :id , "--storagectl", storage_controller, "--port", "2", "--device", "0", "--type", "hdd", "--medium", vm_disk]
end
#
def node_vm_config(vmconf, nodeSettings)
  shared_vm_config(vmconf, nodeSettings) 
  add_shared_folder(vmconf, nodeSettings['sharedFolders']['stage']) 
  add_shared_folder(vmconf, nodeSettings['sharedFolders']['project']) 
  #
  vmconf.vm.provider :virtualbox do |vbxnode|
    shared_vbx_config(vbxnode, nodeSettings)
    # Create Disk 2
    add_vbx_shared_disk(vbxnode, nodeSettings, nodeSettings['disks']['disk2'])
  end
end
#
Vagrant.configure("2") do |config|
  # Master configuration 
  config.vm.define VM_MSTR_MACHINE do |master|
    nodeName='master'
    node_vm_config(master, settings[nodeName])
    #
    # Provisioners
    STAGE_GUEST_FOLDER = settings[nodeName]['sharedFolders']['stage']['guestFolder']
    STAGE_COMMON_SCRIPTS = STAGE_GUEST_FOLDER+"/commonScripts"
    master.vm.provision :shell, inline: "echo Perform master provisioning"
  end 
  config.vm.network "public_network"
  config.vm.provision :shell, inline: "echo Global provisioning"
  #
  # Global Provisioners
  #
  config.vm.provision "init", type: "shell", run: "once", path: LOCAL_COMMON_SCRIPTS+'/linux/co7/generic_provisioning.sh', args: [STAGE_COMMON_SCRIPTS+"/linux/co7"]
end 